version: '2'

services:

  zookeeper:
    image: quay.io/strimzi/kafka:0.38.0-kafka-3.6.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/kafka:0.38.0-kafka-3.6.0
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: kafka-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
  
  kafka-connect:
    build: .    
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"    
    command: ["/opt/kafka/kafka_connect_run.sh"]
    environment:
        KAFKA_CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
        KAFKA_CONNECT_CONFIGURATION: |
            config.storage.topic=connect-configs
            offset.storage.topic=connect-offsets
            status.storage.topic=connect-status
            config.storage.replication.factor=1
            offset.storage.replication.factor=1
            status.storage.replication.factor=1
            value.converter=org.apache.kafka.connect.json.JsonConverter
            value.converter.schemas.enable=true
            key.converter=org.apache.kafka.connect.json.JsonConverter
            key.converter.schemas.enable=true
            group.id=connect-cluster    
            
  kafka-connect-ui:
    image: landoop/kafka-connect-ui
    depends_on:
        - kafka-connect
    ports:
      - "8082:8000"    
    environment:
        CONNECT_URL: kafka-connect:8083
  
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: dbt
      POSTGRES_PASSWORD: dbt
      POSTGRES_DB: dbt
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"

